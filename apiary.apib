FORMAT: 1A
HOST: http://localhost:5000

# Galaxy API

Galaxy API is based on REST principles. The current version of Galaxy API is version 1.0. The following documentation covers most of the core APIs currently available.

## Note

* for demostration purposes, the ssa tokens in all sample requests are shown as `00000000`. The actual value could be of a **different** format.
* for demostration purposes, the user id in all sample requests are shown as `1234567890`. The actual value could be of a **different** format.

# Group Game
Game related resources of the **Galaxy API**

## Game Detail [/game/{game_slug}/detail]
### Get details of a game [GET]

+ Parameter
    + game_slug (required, string, `mario-bros`) ... `game_slug` of the game to fetch detail of.

+ Response 200 (application/json)

        {
            "app_url": "http://nuttyninjas.com/",
            "artwork": {
                "background": "background.jpg"
            },
            "created": "2014-02-27T02:28:23.244Z",
            "description": "Nutty Ninjas is a real-time shooter that brings the experience of social multiplayer gaming to a whole new level; it is a console-style game that can be played anywhere and anytime, simply with your computer and mobile devices. Multiple players can join a common gameplay screen just by using their mobile devices, and control their ninja character to unleash dangerous weapons at fellow players!",
            "developer": {
                "name": "Yang Shun",
                "url": "http://yangshun.im/"
            },
            "genre": "action",
            "icons": "http://png-4.findicons.com/files/icons/2297/super_mario/256/paper_mario.png",
            "name": "Nutty Ninjas",
            "privacy_policy_url": "http://una-org.github.io/demos.html",
            "screenshots": [
                "http://www.digitaltrends.com/wp-content/uploads/2011/02/nintendo-new-super-mario-bros-ds-art-screenshot.jpg",
                "http://splitkick.com/wp-content/uploads/2013/01/newsuper2img.jpg",
                "http://www.mariowiki.com/images/f/fc/SuperMarioBrosArtwork2.jpg",
                "http://www.digitaltrends.com/wp-content/uploads/2011/02/nintendo-new-super-mario-bros-ds-art-screenshot.jpg",
                "http://splitkick.com/wp-content/uploads/2013/01/newsuper2img.jpg",
                "http://www.mariowiki.com/images/f/fc/SuperMarioBrosArtwork2.jpg",
                "http://www.digitaltrends.com/wp-content/uploads/2011/02/nintendo-new-super-mario-bros-ds-art-screenshot.jpg",
                "http://splitkick.com/wp-content/uploads/2013/01/newsuper2img.jpg",
                "http://www.mariowiki.com/images/f/fc/SuperMarioBrosArtwork2.jpg"
            ],
            "status": "pending",
            "slug": "nutty-ninjas",
            "videos": [
                "http://www.youtube.com/embed/4kvT0dywaF8",
                "http://www.youtube.com/embed/1Sow2O8D9Ok"
            ],
            "id": "463ae91d-4e86-476a-b44a-86fe3aa10f05"
        }


## Featured Games [/featured]
### Get a list of featured games [GET]
#### Data Parameter

`genre`: game genre filter for featured games

+ Request (application/x-www-form-urlencoded)

        genre=action

+ Response 200 (application/json)

        [
            "nutty-ninjas"
        ]

### Add a new featured game [POST]
#### Data parameters:

`_user`: ssa token of the currently logged-in user. **[required]**

`game`: game slug of the game to be featured **[required]**

`genres`: list of genres the game would be assigned to

+ Request (application/x-www-form-urlencoded)

        _user=00000000&game=mario-bros&genres=["action"]

+ Response 200 (application/json)

        {"success": true}

### Change the genre of an existing featured game [PUT]
#### Data parameters:

`_user`: ssa token of the currently logged-in user. **[required]**

`game`: game slug of the game to be changed **[required]**

`genres`: list of genres the game would be assigned to

+ Request (application/x-www-form-urlencoded)

        _user=00000000&game=mario-bros&genres=["action"]
        
+ Response 200 (application/json)
        
        {"success": true}

### Remove an existing featured game [DELETE]

#### Data parameters:

`_user`: ssa token of the currently logged-in user. **[required]**

`game`: game slug of the game to be removed **[required]**

+ Request (application/x-www-form-urlencoded)

        _user=00000000&game=mario-bros

+ Response 200 (application/json)
        
        {"success": true}

## Games List [/list]
### Get the list of games matching provided filters [GET]
#### URL parameters:

`_user`: ssa token of the currently logged-in user. **[required for** `status` **filter]**

`count`: maximum number of games to return

`status`: filter by status of game (`approved`, `pending`, `rejected`, `disabled`, `deleted`)

+ Request (URL parameters)

        _user=00000000&count=2&status=approved
        

+ Response 200 (application/json)
        
        [
            {
                "app_url": "http://halo.com",
                "created": "2014-02-25T07:43:31.348Z",
                "icons": "128",
                "name": "Halo 718",
                "screenshots": "yes",
                "slug": "halo-718"
            },
            {
                "app_url": "http://dead.left",
                "created": "2014-02-25T08:17:54.938Z",
                "icons": "128",
                "name": "Left 5 Dead",
                "screenshots": "yes",
                "slug": "left-5-dead"
            }
        ]

## Game Moderation [/{game_slug}/{action}]

### Change a game to specified status [GET]

+ Parameter
    + game_slug (required, string, `mario-bros`) ... `game_slug` of the game to moderate.
    + action (required, string, `approve`) ... `action` to be performed on the game.

+ Response 200 (application/json)
        
        {success: true}

## Game Submission [/game/submit]

### Submit a game [POST]

####Data parameters:

`_user`: ssa token of the current logged-in user **[required]**

`name`: name of the game **[required]**

`app_url`: url link to the game **[required]**

`icons`: list of game icons **[required]**

`homepage_url`: url line to the homepage **[required]**

`screenshots`: list of game screenshots **[required]**

`description`: description of the game

`genre`: genre of the game

`privacy_policy_url`: url link to the privacy policy of the game

`slug`: game slug of the game

`developer`: game developer detail

`artwork`: game artworks

`videos`: list of game demo videos

+ Request (application/json)

        {
            "app_url": "http://nuttyninjas.com/",
            "artwork": {
                "background": "background.jpg"
            },
            "description": "Nutty Ninjas is a real-time shooter that brings the experience of social multiplayer gaming to a whole new level; it is a console-style game that can be played anywhere and anytime, simply with your computer and mobile devices. Multiple players can join a common gameplay screen just by using their mobile devices, and control their ninja character to unleash dangerous weapons at fellow players!",
            "developer": {
                "name": "Yang Shun",
                "url": "http://yangshun.im/"
            },
            "genre": "action",
            "homepage_url": "http://www.nuttyninjas.com",
            "icons": "http://png-4.findicons.com/files/icons/2297/super_mario/256/paper_mario.png",
            "name": "Nutty Ninjas",
            "privacy_policy_url": "http://una-org.github.io/demos.html",
            "screenshots": [
                "http://www.digitaltrends.com/wp-content/uploads/2011/02/nintendo-new-super-mario-bros-ds-art-screenshot.jpg",
                "http://splitkick.com/wp-content/uploads/2013/01/newsuper2img.jpg",
                "http://www.mariowiki.com/images/f/fc/SuperMarioBrosArtwork2.jpg",
                "http://www.digitaltrends.com/wp-content/uploads/2011/02/nintendo-new-super-mario-bros-ds-art-screenshot.jpg",
                "http://splitkick.com/wp-content/uploads/2013/01/newsuper2img.jpg",
                "http://www.mariowiki.com/images/f/fc/SuperMarioBrosArtwork2.jpg",
                "http://www.digitaltrends.com/wp-content/uploads/2011/02/nintendo-new-super-mario-bros-ds-art-screenshot.jpg",
                "http://splitkick.com/wp-content/uploads/2013/01/newsuper2img.jpg",
                "http://www.mariowiki.com/images/f/fc/SuperMarioBrosArtwork2.jpg"
            ],
            "slug": "nutty-ninjas",
            "videos": [
                "http://www.youtube.com/embed/4kvT0dywaF8",
                "http://www.youtube.com/embed/1Sow2O8D9Ok"
            ]
        }
        

+ Response 200 (application/json)
        
        {
            "app_url": "http://nuttyninjas.com/",
            "artwork": {
                "background": "background.jpg"
            },
            "description": "Nutty Ninjas is a real-time shooter that brings the experience of social multiplayer gaming to a whole new level; it is a console-style game that can be played anywhere and anytime, simply with your computer and mobile devices. Multiple players can join a common gameplay screen just by using their mobile devices, and control their ninja character to unleash dangerous weapons at fellow players!",
            "developer": {
                "name": "Yang Shun",
                "url": "http://yangshun.im/"
            },
            "genre": "action",
            "homepage_url": "http://www.nuttyninjas.com",
            "icons": "http://png-4.findicons.com/files/icons/2297/super_mario/256/paper_mario.png",
            "name": "Nutty Ninjas",
            "privacy_policy_url": "http://una-org.github.io/demos.html",
            "screenshots": [
                "http://www.digitaltrends.com/wp-content/uploads/2011/02/nintendo-new-super-mario-bros-ds-art-screenshot.jpg",
                "http://splitkick.com/wp-content/uploads/2013/01/newsuper2img.jpg",
                "http://www.mariowiki.com/images/f/fc/SuperMarioBrosArtwork2.jpg",
                "http://www.digitaltrends.com/wp-content/uploads/2011/02/nintendo-new-super-mario-bros-ds-art-screenshot.jpg",
                "http://splitkick.com/wp-content/uploads/2013/01/newsuper2img.jpg",
                "http://www.mariowiki.com/images/f/fc/SuperMarioBrosArtwork2.jpg",
                "http://www.digitaltrends.com/wp-content/uploads/2011/02/nintendo-new-super-mario-bros-ds-art-screenshot.jpg",
                "http://splitkick.com/wp-content/uploads/2013/01/newsuper2img.jpg",
                "http://www.mariowiki.com/images/f/fc/SuperMarioBrosArtwork2.jpg"
            ],
            "slug": "nutty-ninjas",
            "videos": [
                "http://www.youtube.com/embed/4kvT0dywaF8",
                "http://www.youtube.com/embed/1Sow2O8D9Ok"
            ]
        }

## Game Editing [/game/{game_slug}/edit]

### Edit a game [PUT]

#### Data parameters:

`_user`: ssa token of the current logged-in user **[required]**

`name`: name of the game **[required]**

`app_url`: url link to the game **[required]**

`icons`: list of game icons **[required]**

`homepage_url`: url line to the homepage **[required]**

`screenshots`: list of game screenshots **[required]**

`description`: description of the game

`genre`: genre of the game

`privacy_policy_url`: url link to the privacy policy of the game

`slug`: game slug of the game

`developer`: game developer detail

`artwork`: game artworks

`videos`: list of game demo videos

+ Parameter
    + game_slug (required, string, `mario-bros`) ... `game_slug` of the game to edit.

+ Request (application/json)

        {
            "app_url": "http://nuttyninjas.com/",
            "artwork": {
                "background": "background.jpg"
            },
            "description": "Nutty Ninjas is a real-time shooter that brings the experience of social multiplayer gaming to a whole new level; it is a console-style game that can be played anywhere and anytime, simply with your computer and mobile devices. Multiple players can join a common gameplay screen just by using their mobile devices, and control their ninja character to unleash dangerous weapons at fellow players!",
            "developer": {
                "name": "Yang Shun",
                "url": "http://yangshun.im/"
            },
            "genre": "action",
            "homepage_url": "http://www.nuttyninjas.com",
            "icons": "http://png-4.findicons.com/files/icons/2297/super_mario/256/paper_mario.png",
            "name": "Nutty Ninjas",
            "privacy_policy_url": "http://una-org.github.io/demos.html",
            "screenshots": [
                "http://www.digitaltrends.com/wp-content/uploads/2011/02/nintendo-new-super-mario-bros-ds-art-screenshot.jpg",
                "http://splitkick.com/wp-content/uploads/2013/01/newsuper2img.jpg",
                "http://www.mariowiki.com/images/f/fc/SuperMarioBrosArtwork2.jpg",
                "http://www.digitaltrends.com/wp-content/uploads/2011/02/nintendo-new-super-mario-bros-ds-art-screenshot.jpg",
                "http://splitkick.com/wp-content/uploads/2013/01/newsuper2img.jpg",
                "http://www.mariowiki.com/images/f/fc/SuperMarioBrosArtwork2.jpg",
                "http://www.digitaltrends.com/wp-content/uploads/2011/02/nintendo-new-super-mario-bros-ds-art-screenshot.jpg",
                "http://splitkick.com/wp-content/uploads/2013/01/newsuper2img.jpg",
                "http://www.mariowiki.com/images/f/fc/SuperMarioBrosArtwork2.jpg"
            ],
            "slug": "nutty-ninjas",
            "videos": [
                "http://www.youtube.com/embed/4kvT0dywaF8",
                "http://www.youtube.com/embed/1Sow2O8D9Ok"
            ]
        }

+ Response 200 (application/json)
        
        {
            "app_url": "http://nuttyninjas.com/",
            "artwork": {
                "background": "background.jpg"
            },
            "description": "Nutty Ninjas is a real-time shooter that brings the experience of social multiplayer gaming to a whole new level; it is a console-style game that can be played anywhere and anytime, simply with your computer and mobile devices. Multiple players can join a common gameplay screen just by using their mobile devices, and control their ninja character to unleash dangerous weapons at fellow players!",
            "developer": {
                "name": "Yang Shun",
                "url": "http://yangshun.im/"
            },
            "genre": "action",
            "homepage_url": "http://www.nuttyninjas.com",
            "icons": "http://png-4.findicons.com/files/icons/2297/super_mario/256/paper_mario.png",
            "name": "Nutty Ninjas",
            "privacy_policy_url": "http://una-org.github.io/demos.html",
            "screenshots": [
                "http://www.digitaltrends.com/wp-content/uploads/2011/02/nintendo-new-super-mario-bros-ds-art-screenshot.jpg",
                "http://splitkick.com/wp-content/uploads/2013/01/newsuper2img.jpg",
                "http://www.mariowiki.com/images/f/fc/SuperMarioBrosArtwork2.jpg",
                "http://www.digitaltrends.com/wp-content/uploads/2011/02/nintendo-new-super-mario-bros-ds-art-screenshot.jpg",
                "http://splitkick.com/wp-content/uploads/2013/01/newsuper2img.jpg",
                "http://www.mariowiki.com/images/f/fc/SuperMarioBrosArtwork2.jpg",
                "http://www.digitaltrends.com/wp-content/uploads/2011/02/nintendo-new-super-mario-bros-ds-art-screenshot.jpg",
                "http://splitkick.com/wp-content/uploads/2013/01/newsuper2img.jpg",
                "http://www.mariowiki.com/images/f/fc/SuperMarioBrosArtwork2.jpg"
            ],
            "slug": "nutty-ninjas",
            "videos": [
                "http://www.youtube.com/embed/4kvT0dywaF8",
                "http://www.youtube.com/embed/1Sow2O8D9Ok"
            ]
        }


# Group Leaderboard

Note: These API endpoints currently expect parameters sent with `application/x-www-form-urlencoded`.
When https://github.com/mozilla/galaxy-api/issues/207 gets fixed, these endpoints will all accept JSON blobs.

## Leaderboard [/game/{game_slug}/boards/{board_slug}]

+ Parameters
    + game_slug (string, `mario-bros`) ... The slug of the Game.
    + board_slug (string, `warios-smashed`) ... The slug of the Leaderboard.
    
+ Model (application/json)

    ```js
    {
        "data": [
            {
                "user": 1,
                "score": 100
            },
            {
                "user": 5,
                "score": 705
            },
            {
                "user": 9,
                "score": 340
            },
        ],
        "name": "Warios Smashed",
        "slug": "warios-smashed"
    }
    ```

### Retrieve a Leaderboard [GET]
Returns a specific Leaderboard.

+ Response 200 (application/json)

    [Leaderboard][]

### Delete a Leaderboard [DELETE]
Delete a Leaderboard. The current user must be the same user who created the Leaderboard (or be an admin).

+ Response 200 (application/json)

    ```js
    {
        "success": "true"
    }
    ```

### Update a Leaderboard [PATCH]
Update the `name` and `slug` for a leaderboard. Coming soon.

+ Request (application/json)

    [Leaderboard][]

+ Response 200 (application/json)

    ```js
    {
        "success": "true"
    }
    ```

## Leaderboard Score [/game/{game_slug}/boards/{board_slug}/score]

+ Parameters
    + game_slug (string, `mario-bros`) ... The slug of the Game.
    + board_slug (string, `warios-smashed`) ... The slug of the Leaderboard.

### Increment a Score [POST]
Updates the score for a leaderboard board for a particular game.

+ Request (application/json)

    ```js
    {
        "value": 5.0
    }
    ```

+ Response 200 (application/json)

    ```js
    {
        "success": "true"
    }
    ```

## Leaderboard Collection [/game/{game_slug}/boards]
A collection of Leaderboards.

+ Model (application/json)

    ```js
    [
        {
            "data": [
                {
                    "user": 1,
                    "score": 100
                },
                {
                    "user": 5,
                    "score": 705
                },
                {
                    "user": 9,
                    "score": 340
                },
                ...
            ],
            "name": "Warios Smashed",
            "slug": "warios-smashed"
        },
        ...
    ]
    ```

### Create a Leaderboard [POST]
To create a new Leaderboard object simply provide a JSON blob of the `name` and `slug` attributes for the new Leaderboard.

+ Request (application/json)

    ```js
    {
        "name": "Name of leaderboard",
        "string": "Slug of leaderboard"
    }
    ```

+ Response 200 (application/json)

    ```js
    {
        "success": "true"
    }
    ```

### Retrieve all Leaderboards [GET]
Returns a list of the leaderboards boards that are available for a particular game.

+ Response 200 (application/json)

    [Leaderboard Collection][]


# Group User

## User Login [/user/login]
### User login via Persona [POST]
#### Data Parameter:

`assertion`: Persona assertion **[required]**

+ Request (application/x-www-form-urlencoded)

        assertion=1234567890

+ Response 200 (application/json)
        
        {
            "username": "mario", 
            "email": "mario@bros.com", 
            "permissions": {
                "developer": false,
                "reviewer": false,
                "admin": false
            }, 
            "homepage": "",
            "avatar": "http://www.gravatar.com/avatar/00000000"
            "companyName": ""
            "companySlug": ""
            "dateLastLogin": 1394222212
            "id": "b08cbc4b-71ee-4726-934c-7c7bec555acc"
            "support": ""
        }   

## User Profile [/user/profile]
### Update user profile [PUT]
#### URL parameters:

`_user`: ssa token of the currently logged-in user. **[required]**

`username`: new username for current user 

`email`: new email for current user **[at least one of** `username` **and** `email` **must be specified]**

+ Request (URL parameters)

        _user=00000000&username=luigi&email=luigui@bros.com

+ Response 200 (application/json)
        
        {"success": "true"}

## User Search [/user/search]
### Search for user [GET]
#### URL parameters:

`_user`: ssa token of the currently logged-in user. **[required]**

`email`: email to search for

`id`: user id to search for

`devSlug`: company/developer slug to search for

`q`: email/user id/username to search for **[at least one of** `email` **,** `id` **,** `devSlug` **and** `q` **must be specified]**

+ Request (URL parameters)

        _user=00000000&q=mario@bros.com

+ Response 200 (application/json)
        
        [
            {
                "avatar": "http://www.gravatar.com/avatar/00000000",
                "username": "mario",
                "id": "1234567890"
            }
        ]

## User Access Control [/user/acl]
### Update the permission of user [POST]
#### Data parameters:

`_user`: admin user's SSA token **[required]**

`id`: user id to change permission for **[required]**

`developer`: whether or not user should have developer permission (`0`, `1`)

`reviewer`: whether or not user should have reviewer permission (`0`, `1`)

`admin`: whether or not user should have admin permission (`0`, `1`)

+ Request (application/x-www-form-urlencoded)

        id=1&developer=1&reviewer=1&admin=0
        
+ Response 200 (application/json)
        
        {
            "permission": {
                "developer": true,
                "reviewer": true,
                "admin": false
            }
        }


# Group Feedback

## Submit [/feedback]

### Submit Galaxy feedback [POST]

#### Data parameters:

`feedback`: the feedback message **[required]**

`page_url`: URL the feedback was submitted from **[required]**

`sprout`: Must be 'potato'. Used for a rudimentary captcha **[required]**

`tuber`: Must be blank. Used for a rudimentary captcha

`_user`: ssa token of the current logged-in user

+ Request (application/json)

        {
            "feedback": "This page is terrible",
            "page_url": "http://galaxy.mozilla.org/badpage",
            "sprout": "potato",
            "tuber": ""
        }
        

+ Response 200 (application/json)
        
        {
            "success": "true"
        }

